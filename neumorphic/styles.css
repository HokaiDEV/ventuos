/* Neumorphic UI â€” soft dual shadows, monochrome, minimal depth */
:root {
  --bg: #e0e0e0;
  --text: #555555;
  --muted: #6b6b6b;
  --shadow-dark: #bebebe;
  --shadow-light: #ffffff;
  --elevation: 8px;
  --blur: 14px;
  --radius: 14px;
  --transition-fast: 120ms;
  --transition: 220ms;

  /* Computed tokens */
  --shadow-elevation: calc(var(--elevation)) calc(var(--elevation)) var(--blur) var(--shadow-dark),
    calc(var(--elevation) * -1) calc(var(--elevation) * -1) var(--blur) var(--shadow-light);
  --shadow-inset: inset calc(var(--elevation)) calc(var(--elevation)) var(--blur) var(--shadow-dark),
    inset calc(var(--elevation) * -1) calc(var(--elevation) * -1) var(--blur) var(--shadow-light);
}

* {
  box-sizing: border-box;
}

html, body {
  height: 100%;
}

body {
  margin: 0;
  font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu,
    Cantarell, Noto Sans, Arial, "Apple Color Emoji", "Segoe UI Emoji";
  color: var(--text);
  background: var(--bg);
}

.app {
  max-width: 1100px;
  margin: 0 auto;
  padding: 28px 20px 40px;
}

.toolbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 16px;
  padding: 16px 18px;
}

.toolbar h1 {
  margin: 0;
  font-size: 20px;
  font-weight: 700;
  color: var(--muted);
}

.controls {
  display: flex;
  gap: 16px;
  align-items: center;
  flex-wrap: wrap;
}

.control {
  display: grid;
  grid-template-columns: auto;
  gap: 6px;
  font-size: 12px;
  color: var(--muted);
}

.control input[type="range"] {
  width: 180px;
}

.grid {
  margin-top: 22px;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
  gap: 22px;
}

.row {
  display: flex;
  align-items: center;
  gap: 12px;
  flex-wrap: wrap;
}

.stack {
  display: grid;
  gap: 12px;
  margin-bottom: 14px;
}

.neu {
  background: var(--bg);
  border-radius: var(--radius);
  box-shadow: var(--shadow-elevation);
  transition: box-shadow var(--transition), transform var(--transition-fast),
    background var(--transition), border-color var(--transition);
}

.neu.is-pressed {
  box-shadow: var(--shadow-inset);
}

.card {
  padding: 20px 18px;
}

.card h2 {
  margin: 0 0 12px;
  font-size: 14px;
  color: var(--muted);
}

.btn {
  appearance: none;
  border: none;
  background: var(--bg);
  color: #616161;
  font-weight: 600;
  padding: 10px 16px;
  border-radius: var(--radius);
  cursor: pointer;
  box-shadow: var(--shadow-elevation);
}

.btn.is-flat {
  box-shadow: calc(var(--elevation) * 0.6) calc(var(--elevation) * 0.6)
      calc(var(--blur) * 0.8) var(--shadow-dark),
    calc(var(--elevation) * -0.6) calc(var(--elevation) * -0.6)
      calc(var(--blur) * 0.8) var(--shadow-light);
}

.btn:hover {
  transform: translateY(-1px);
}

.btn:active {
  box-shadow: var(--shadow-inset);
  transform: translateY(0);
}

.input {
  width: 100%;
  padding: 12px 14px;
  font-size: 14px;
  color: var(--text);
  background: var(--bg);
  border: none;
  outline: none;
}

.input::placeholder {
  color: #8a8a8a;
}

.input:focus {
  box-shadow: var(--shadow-inset);
}

.checkbox {
  display: inline-flex;
  align-items: center;
  gap: 10px;
  padding: 8px 12px;
}

.checkbox input {
  appearance: none;
  width: 18px;
  height: 18px;
  border-radius: 6px;
  background: var(--bg);
  box-shadow: var(--shadow-elevation);
  display: grid;
  place-items: center;
}

.checkbox input:checked {
  box-shadow: var(--shadow-inset);
}

.checkbox .mark {
  display: none;
}

.switch {
  position: relative;
  width: 58px;
  height: 34px;
  display: inline-block;
  padding: 4px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.switch .thumb {
  position: absolute;
  left: 4px;
  top: 4px;
  width: 26px;
  height: 26px;
  border-radius: 999px;
  background: var(--bg);
  box-shadow: var(--shadow-elevation);
  transition: left var(--transition), box-shadow var(--transition);
}

.switch:has(input:checked) .thumb {
  left: 28px;
  box-shadow: var(--shadow-inset);
}

/* Focus states without hard borders */
.btn:focus-visible,
.switch:focus-within,
.checkbox:focus-within,
.input:focus-visible {
  outline: none;
  box-shadow: var(--shadow-inset);
}

/* Reduce motion */
@media (prefers-reduced-motion: reduce) {
  .neu, .btn, .switch .thumb { transition: none; }
}

